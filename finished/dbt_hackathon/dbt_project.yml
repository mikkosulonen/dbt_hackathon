
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_hackathon'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_hackathon'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  dbt_hackathon: # Align the naming as above
    # Config indicated by + and applies to all files under models/example/
    # The path here follows the folder paths starting from models/
    staging:
      +schema: stg
      +materialized: view
      tpc:
        +materialized: table
    publish:
      +schema: publish
      +materialized: view
      +post-hook:
        - "grant select on {{ this }} to role power_bi_role"
        - "grant usage on schema {{ schema }} to role power_bi_role"


seeds:
  dbt_hackathon:
    schema: ref